# создание таблицы
CREATE TABLE buyer
(
	id INT PRIMARY KEY AUTO_INCREMENT,
	date_birt DATE,
	first_name VARCHAR(20),
  last_name VARCHAR(20),
	mobile_phone VARCHAR(20) 
);

-- заполнение таблицы

-- DATE - format YYYY-MM-DD
-- DATETIME - format: YYYY-MM-DD HH:MI:SS
-- TIMESTAMP - format: YYYY-MM-DD HH:MI:SS
-- YEAR - format YYYY or YY

-- Способ №1

INSERT buyer (date_birt, first_name,last_name,mobile_phone)
VALUES
	("2023-01-01", "Михаил", "Меркушов", "+7-999-888-77-66"), -- id = 1
    ("2022-12-31", "Сергей", "Сергеев", "60-70-80"), -- id = 2
	("2022-12-30", "Том", "Круз", "80-70-80"), -- id = 3
	("2022-01-02", "Филл", "Поляков", "+7-999-888-77-55"); -- id = 4

-- Способ №2

INSERT buyer
VALUES
	(1, "2023-01-01", "Михаил", "Меркушов", "+7-999-888-77-66"), 
	(2, "2022-12-31", "Сергей", "Сергеев", "60-70-80"),
	(3, "2022-12-30", "Том", "Круз", "80-70-80"),
	(4, "2022-01-02", "Филл", "Поляков", "+7-999-888-77-55");	
	
SELECT buyer.first_name, buyer.id, orders.buyer_id, orders.amount
FROM orders, Buyer
WHERE orders.buyer_id = buyer.id;	

Создание псевдонимов.

-- Посчитаем чек по заказу. Для этого умножаю количество на цену:
SELECT amount * count_order AS result -- Псевдоним - result 
FROM orders;

--ещё вариант
SELECT amount * count_order result -- Псевдоним - result 
FROM Orders;

-- аналогично создаётся псевдоним таблицы
SELECT B.first_name, B.id, O.buyer_id, O.amount
FROM Orders O, Buyer B
WHERE O.buyer_id = B.id;

-- или 
SELECT B.first_name, B.id, O.buyer_id, O.amount
FROM Orders O, Buyer B
WHERE O.buyer_id = B.id;


# UPDATE  - обновление данных**

UPDATE Orders
SET amount = amount * 0.75;
-- 100% цены = 1, 25% скидка = 0.25
-- Товар после уценки: 1.00 - 0.25 = 0.75 

SELECT amount new_amount
FROM Orders;

TRUNCATE Orders; -- Удаляет все записи из таблицы Orders

-- Добавить столбец "new_column" в таблицу "Table_name"
ALTER TABLE Table_name
ADD new_column VARCHAR(50);

-- Удалить столбец "new_column" из таблицы "Table_name"
ALTER TABLE Table_name
DROP COLUMN new_column;



В магазине действует акция: скидка 50% на заказы, в которых есть минимум 4 товара.
Скидка распространяется на 2 покупателей:
 id = 2,
 amount = 1200 ,
 count = 5 и id = 4,
 amount = 5000 ,
 count = 4

UPDATE Orders
SET amount = amount * 0.50
WHERE count_order >= 4; -- ИЛИ WHERE count_order > 3

SELECT amount new_amount, id
FROM Orders;

# удаление по условию

-- Добавили клиента
INSERT Buyer (date_birt, first_name,last_name,mobile_phone)
VALUES
	("2023-01-01", "Тестовый", "Пользователь", "+7-999-888-77-66");

-- Удалили строчку со значением
DELETE FROM Buyer
WHERE first_name='Тестовый';

#логические операции

-- AND

-- Получим заказы от 1500 рублей из магазина "Ягодки"
SELECT amount, count_order 
FROM Orders
WHERE amount > 1500 AND manufacter = "Ягодки";

-- OR: операция логического ИЛИ.

--  Хотим получить товары или из "Амазона", или товары из диапазона (3;5)
SELECT amount, count_order, manufacter
FROM Orders
WHERE manufacter = "Амазон" OR count_order > 2 AND count_order < 5;
-- Оператор AND имеет более высокий приоритет, чем OR


# NOT: операция логического отрицания

-- Исключим товары марки "Ягодки"
SELECT amount, count_order, manufacter
FROM Orders
WHERE manufacter != "Ягодки";

-- ИЛИ через "!="
SELECT amount, count_order, manufacter
FROM Orders
WHERE NOT manufacter = "Ягодки";


ALTER TABLE Orders 
ADD COLUMN status INT AFTER count_order;
-- RAND(): https://dev.mysql.com/doc/refman/8.0/en/mathematical-functions.html#function_rand
-- Возращает числа от 0 до 1
UPDATE Orders
SET status = RAND();

# CASE

SELECT *
FROM Orders;

SELECT status, -- Перед "CASE" ставится запятая, после перечисления столбцов
  CASE WHEN status IS TRUE THEN 'заказ оплачен'
  ELSE 'оплатите заказ' 
  END AS message
FROM Orders;

-- ИЛИ

SELECT status, -- Перед "CASE" ставится запятая, после перечисления столбцов
  CASE WHEN status = 1 THEN 'заказ оплачен'
  ELSE 'оплатите заказ' 
  END AS message
FROM Orders;


#IF

-- Представьте,что мы страхуем заказы со средним чеком от 3000 включительно.
-- Сообщим клиентам о наличии или отсутствии страховки
SELECT status, amount, count_order, manufacter,-- Перед "IF" тоже ставится запятая
    IF(amount * count_order >= 3000, 'Cтраховка включена в стоимость', 'Страховка оплачивается отдельно') AS info_message
FROM Orders;






